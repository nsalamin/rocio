## find max ppv
ppvMax<-max(perf@y.values[[1]],na.rm=TRUE)
indices_ppvmax= match(perf@y.values[[1]],ppvMax)
## find max recall for max ppv and corresponding alpha
recall4maxppv<-max(perf@x.values[[1]][indices_ppvmax==1],na.rm=TRUE)
LocalId<-which.max(perf@x.values[[1]][indices_ppvmax==1])
ThresholdFN=perf@alpha.values[[1]][LocalId]
perf<-performance(pred,measure="sens",x.measure="spec")
## find max ppv
ppvMax<-max(perf@y.values[[1]],na.rm=TRUE)
indices_ppvmax= match(perf@y.values[[1]],ppvMax)
## find max recall for max ppv and corresponding alpha
recall4maxppv<-max(perf@x.values[[1]][indices_ppvmax==1],na.rm=TRUE)
LocalId<-which.max(perf@x.values[[1]][indices_ppvmax==1])
ThresholdFP=perf@alpha.values[[1]][LocalId]
aucpr=performance(pred,measure="aucpr")@y.values[[1]]
lambdaPerfld[j]<-l
meanBLPerfld[j]<-d
AUCld[j]<-aucpr
MaxNonCoevPerfld[j]=ThresholdFN
MinCoevPerfld[j]=ThresholdFP
j=j+1
}
}
AUC.df<-data.frame(
lambda=lambdaPerf,
depth=meanBLPerf,
gamma=gammaPerf,
AUC=AUC,
MaxNonCoevPerf=MaxNonCoevPerf,
MinCoevPerf=MinCoevPerf
)
AUCld.df<-data.frame(
lambda=lambdaPerfld,
depth=meanBLPerfld,
AUC=AUCld,
MaxNonCoevPerf=MaxNonCoevPerfld,
MinCoevPerf=MinCoevPerfld
)
return (list(df,AUC.df, AUCld.df))
}
extractNsubst<-function(Nsubst,nbCoev){
lengthProt<-nbCoev/2+ncol(Nsubst)
Nsubst2<-matrix(-1,nrow=nrow(Nsubst),ncol=lengthProt)
Nsubst2[,((nbCoev+1):lengthProt)]<-Nsubst[,((nbCoev/2+1):ncol(Nsubst))]
Nsubst2[,seq(1,nbCoev,2)]<-Nsubst[,1:(nbCoev/2)]
Nsubst2[,seq(2,nbCoev,2)]<-Nsubst[,1:(nbCoev/2)]
CoevSub<-computeSumPP(Nsubst2)
}
openFiles<-function(paths, gammas, nbCoev,nsubstNonCoev,nLG=0,nCat=0,pathNoCoev=""){
i=1
listOfDataFrames <- vector(mode = "list",length=length(paths))
nSites= nbCoev+nLG+nCat
for (curpath in paths ){
## openfiles and read
setwd(curpath)
plmAPCww<-read.csv("plm_output_ww_wReg_Zsg_APC.txt",header=FALSE)
plmww<-read.csv("plm_output_ww_wReg_Zsg.txt",header=FALSE)
plmAPC<-read.csv("plm_output_wow_wReg_Zsg_APC.txt",header=FALSE)
plm<-read.csv("plm_output_wow_wReg_Zsg.txt",header=FALSE)
plmAPCww=as.matrix(plmAPCww)
plmAPC=as.matrix(plmAPC)
plm=as.matrix(plm)
plmww=as.matrix(plmww)
APC=as.matrix(plm-plmAPC)
lambda=read.csv("ListFasta.txt",header=FALSE)[1:nrow(APC),3]
sample=read.csv("ListFasta.txt",header=FALSE)[1:nrow(APC),2]
depthf=read.csv("ListFasta.txt",header=FALSE)[1:nrow(APC),4]
meanBL=read.csv("ListFasta.txt",header=FALSE)[1:nrow(APC),5]
depths=round(read.csv("depth.csv",header=FALSE)[1:nrow(APC),1],digits=2)
ListNVar<-readLines("DataDesc_nVarsperSite.txt")[1:nrow(APC)]
FijNull<-as.matrix(read.csv("DataDesc_NbNullPairFreq.txt",header=FALSE))
HighFreq<-as.matrix(read.csv("DataDesc_HighestPairFreq.txt",header=FALSE))
SecondCompFreq<-as.matrix(read.csv("DataDesc_SecondCompPairFreq.txt",header=FALSE))
SumTwoHighestCompFreq<-HighFreq+SecondCompFreq
SecondFreq<-as.matrix(read.csv("DataDesc_SecondPairFreq.txt",header=FALSE))
SumTwoHighestFreq<-HighFreq+SecondFreq
nMostOccuringCompPairs<-as.matrix(read.csv("DataDesc_nbMostOccuringCompPairs.txt",header=FALSE))
Dev<-as.matrix(read.csv("DataDesc_Dev.txt",header=FALSE))
DevAPC<-t(apply(Dev,1,function(x) Compute_APC(x,nSites)))
PairEntropies<-as.matrix(read.csv("DataDesc_PairEntrop.txt",header=FALSE))
MINonNorm<-as.matrix(read.csv("DataDesc_MI.txt",header=FALSE))
MI<-as.matrix(read.csv("DataDesc_MINorm.txt",header=FALSE))
MIAPC<-t(apply(MI,1,function(x) Compute_APC(x,nSites)))
V<-as.matrix(read.csv("DataDesc_V.txt",header=FALSE))
VAPC<-t(apply(V,1,function(x) Compute_APC(x,nSites)))
NVar<-t(matrix(as.double(unlist(strsplit(ListNVar,","))),ncol=nrow(APC)))
MinNvarPair<-computeMinPP(NVar)
Neff<-read.csv("DataDesc_Neff.txt",header=FALSE)
NSeqEff<-Neff$V1
MeanSimPerSeq<-Neff$V2
Nsubst<-as.matrix(read.csv("DataDesc_NSubst.txt",header=FALSE))
Coev<-t(matrix(CoelvolvingPairs(nbCoev,nSites,nLG,nCat),ncol=nrow(APC),nrow=ncol(APC)))
CoevTypes=Coev
Coev = CoevTypes=="Coev"
if(!nsubstNonCoev) {
CoevSub<-matrix(-1,ncol=ncol(APC),nrow=nrow(APC))
CoevSub[Coev]<-Nsubst
}else{
CoevSub<-extractNsubst(Nsubst,nbCoev)
}
##if nonCoevComp
if (pathNoCoev) {
setwd(pathNoCoev)
plmAPCwwNC<-as.matrix(read.csv("plm_output_ww_wReg_Zsg_APC.txt",header=FALSE))
plmwwNC<-as.matrix(read.csv("plm_output_ww_wReg_Zsg.txt",header=FALSE))
plmAPCNC<-as.matrix(read.csv("plm_output_wow_wReg_Zsg_APC.txt",header=FALSE))
plmNC<-as.matrix(read.csv("plm_output_wow_wReg_Zsg.txt",header=FALSE))
### fillwith nanCoevsites
plmAPCwwNC<-extractMatrixWithNanCoev(plmAPCwwNC,nbCoev,nSites)
plmAPCNC<-extractMatrixWithNanCoev(plmAPCNC,nbCoev,nSites)
plmNC<-extractMatrixWithNanCoev(plmNC,nbCoev,nSites)
plmwwNC<-extractMatrixWithNanCoev(plmwwNC,nbCoev,nSites)
APCNC=as.matrix(plmNC-plmAPCNC)
}
listOfDataFrames[[i]] <-data.frame(
sample=as.factor(rep(sample,ncol(APC))),
pairentropy=as.vector(PairEntropies),
NbPairsAA=(441-as.vector(FijNull)),
sqrtNbPairsAA=sqrt(441-as.vector(FijNull)),
highFreq=as.vector(HighFreq),
sumTwoHighestFreq=as.vector(SumTwoHighestFreq),
MinNvarPair=as.vector(MinNvarPair),
nMostOccuringCompPairs=as.vector(nMostOccuringCompPairs),
secondFreq=as.vector(SecondFreq),
depths=rep(as.vector(depths),ncol(APC)),
meanBL=rep(as.vector(meanBL),ncol(APC)),
lambda =(rep(lambda,ncol(APC))),
nSubst=as.vector(CoevSub),
Dev=as.vector(Dev),
DevAPC=as.vector(DevAPC),
miAPC=as.vector(MIAPC),
mi=as.vector(MI),
miNonNom=as.vector(MINonNorm),
v=as.vector(V),
vAPC=as.vector(VAPC),
Coev=as.vector(Coev),
CoevTypes=as.vector(CoevTypes),
plmAPCNC=as.vector(plmAPCNC),
plmAPCwwNC=as.vector(plmAPCwwNC),
plm=as.vector(plm),
plmww=as.vector(plmww),
apc=as.vector(APC), plmAPC=as.vector(plmAPC),plmAPCww=as.vector(plmAPCww),gamma=(rep(gammas[i],ncol(APC))))
i=i+1
}
df <- do.call("rbind", listOfDataFrames)
return(df)
}
library(ggplot2)
library(ROCR)
path1="/Users/eneveu/Documents/POSTDOC-UNIL/CoevolutionProject/PottsModelAnalysis/SimulationTrees/Couplings/WithCoevMixtureBL0.01/"
pathNoCoev="/Users/eneveu/Documents/POSTDOC-UNIL/CoevolutionProject/PottsModelAnalysis/SimulationTrees/Couplings/WithoutCoevMixtureBL0.01/"
nsubstNonCoev=TRUE
paths=c(path1)
Ncoev=50 #25 pairs - 50 sites
nLG=25
nCat=25
gammas=c(1)
#gammas=c(1.0)
FullData<-openFiles(paths,gammas,Ncoev,nsubstNonCoev,nLG,nCat,pathNoCoev)
FullData$CoevTypes=as.factor(FullData$CoevTypes)
openFiles<-function(paths, gammas, nbCoev,nsubstNonCoev,nLG=0,nCat=0,pathNoCoev=""){
i=1
listOfDataFrames <- vector(mode = "list",length=length(paths))
nSites= nbCoev+nLG+nCat
for (curpath in paths ){
## openfiles and read
setwd(curpath)
plmAPCww<-read.csv("plm_output_ww_wReg_Zsg_APC.txt",header=FALSE)
plmww<-read.csv("plm_output_ww_wReg_Zsg.txt",header=FALSE)
plmAPC<-read.csv("plm_output_wow_wReg_Zsg_APC.txt",header=FALSE)
plm<-read.csv("plm_output_wow_wReg_Zsg.txt",header=FALSE)
plmAPCww=as.matrix(plmAPCww)
plmAPC=as.matrix(plmAPC)
plm=as.matrix(plm)
plmww=as.matrix(plmww)
APC=as.matrix(plm-plmAPC)
lambda=read.csv("ListFasta.txt",header=FALSE)[1:nrow(APC),3]
sample=read.csv("ListFasta.txt",header=FALSE)[1:nrow(APC),2]
depthf=read.csv("ListFasta.txt",header=FALSE)[1:nrow(APC),4]
meanBL=read.csv("ListFasta.txt",header=FALSE)[1:nrow(APC),5]
depths=round(read.csv("depth.csv",header=FALSE)[1:nrow(APC),1],digits=2)
ListNVar<-readLines("DataDesc_nVarsperSite.txt")[1:nrow(APC)]
FijNull<-as.matrix(read.csv("DataDesc_NbNullPairFreq.txt",header=FALSE))
HighFreq<-as.matrix(read.csv("DataDesc_HighestPairFreq.txt",header=FALSE))
SecondCompFreq<-as.matrix(read.csv("DataDesc_SecondCompPairFreq.txt",header=FALSE))
SumTwoHighestCompFreq<-HighFreq+SecondCompFreq
SecondFreq<-as.matrix(read.csv("DataDesc_SecondPairFreq.txt",header=FALSE))
SumTwoHighestFreq<-HighFreq+SecondFreq
nMostOccuringCompPairs<-as.matrix(read.csv("DataDesc_nbMostOccuringCompPairs.txt",header=FALSE))
Dev<-as.matrix(read.csv("DataDesc_Dev.txt",header=FALSE))
DevAPC<-t(apply(Dev,1,function(x) Compute_APC(x,nSites)))
PairEntropies<-as.matrix(read.csv("DataDesc_PairEntrop.txt",header=FALSE))
MINonNorm<-as.matrix(read.csv("DataDesc_MI.txt",header=FALSE))
MI<-as.matrix(read.csv("DataDesc_MINorm.txt",header=FALSE))
MIAPC<-t(apply(MI,1,function(x) Compute_APC(x,nSites)))
V<-as.matrix(read.csv("DataDesc_V.txt",header=FALSE))
VAPC<-t(apply(V,1,function(x) Compute_APC(x,nSites)))
NVar<-t(matrix(as.double(unlist(strsplit(ListNVar,","))),ncol=nrow(APC)))
MinNvarPair<-computeMinPP(NVar)
Neff<-read.csv("DataDesc_Neff.txt",header=FALSE)
NSeqEff<-Neff$V1
MeanSimPerSeq<-Neff$V2
Nsubst<-as.matrix(read.csv("DataDesc_NSubst.txt",header=FALSE))
Coev<-t(matrix(CoelvolvingPairs(nbCoev,nSites,nLG,nCat),ncol=nrow(APC),nrow=ncol(APC)))
CoevTypes=Coev
Coev = CoevTypes=="Coev"
if(!nsubstNonCoev) {
CoevSub<-matrix(-1,ncol=ncol(APC),nrow=nrow(APC))
CoevSub[Coev]<-Nsubst
}else{
CoevSub<-extractNsubst(Nsubst,nbCoev)
}
##if nonCoevComp
if (pathNoCoev!="") {
setwd(pathNoCoev)
plmAPCwwNC<-as.matrix(read.csv("plm_output_ww_wReg_Zsg_APC.txt",header=FALSE))
plmwwNC<-as.matrix(read.csv("plm_output_ww_wReg_Zsg.txt",header=FALSE))
plmAPCNC<-as.matrix(read.csv("plm_output_wow_wReg_Zsg_APC.txt",header=FALSE))
plmNC<-as.matrix(read.csv("plm_output_wow_wReg_Zsg.txt",header=FALSE))
### fillwith nanCoevsites
plmAPCwwNC<-extractMatrixWithNanCoev(plmAPCwwNC,nbCoev,nSites)
plmAPCNC<-extractMatrixWithNanCoev(plmAPCNC,nbCoev,nSites)
plmNC<-extractMatrixWithNanCoev(plmNC,nbCoev,nSites)
plmwwNC<-extractMatrixWithNanCoev(plmwwNC,nbCoev,nSites)
APCNC=as.matrix(plmNC-plmAPCNC)
}
listOfDataFrames[[i]] <-data.frame(
sample=as.factor(rep(sample,ncol(APC))),
pairentropy=as.vector(PairEntropies),
NbPairsAA=(441-as.vector(FijNull)),
sqrtNbPairsAA=sqrt(441-as.vector(FijNull)),
highFreq=as.vector(HighFreq),
sumTwoHighestFreq=as.vector(SumTwoHighestFreq),
MinNvarPair=as.vector(MinNvarPair),
nMostOccuringCompPairs=as.vector(nMostOccuringCompPairs),
secondFreq=as.vector(SecondFreq),
depths=rep(as.vector(depths),ncol(APC)),
meanBL=rep(as.vector(meanBL),ncol(APC)),
lambda =(rep(lambda,ncol(APC))),
nSubst=as.vector(CoevSub),
Dev=as.vector(Dev),
DevAPC=as.vector(DevAPC),
miAPC=as.vector(MIAPC),
mi=as.vector(MI),
miNonNom=as.vector(MINonNorm),
v=as.vector(V),
vAPC=as.vector(VAPC),
Coev=as.vector(Coev),
CoevTypes=as.vector(CoevTypes),
plmAPCNC=as.vector(plmAPCNC),
plmAPCwwNC=as.vector(plmAPCwwNC),
plm=as.vector(plm),
plmww=as.vector(plmww),
apc=as.vector(APC), plmAPC=as.vector(plmAPC),plmAPCww=as.vector(plmAPCww),gamma=(rep(gammas[i],ncol(APC))))
i=i+1
}
df <- do.call("rbind", listOfDataFrames)
return(df)
}
library(ggplot2)
library(ROCR)
path1="/Users/eneveu/Documents/POSTDOC-UNIL/CoevolutionProject/PottsModelAnalysis/SimulationTrees/Couplings/WithCoevMixtureBL0.01/"
pathNoCoev="/Users/eneveu/Documents/POSTDOC-UNIL/CoevolutionProject/PottsModelAnalysis/SimulationTrees/Couplings/WithoutCoevMixtureBL0.01/"
nsubstNonCoev=TRUE
paths=c(path1)
Ncoev=50 #25 pairs - 50 sites
nLG=25
nCat=25
gammas=c(1)
#gammas=c(1.0)
FullData<-openFiles(paths,gammas,Ncoev,nsubstNonCoev,nLG,nCat,pathNoCoev)
FullData$CoevTypes=as.factor(FullData$CoevTypes)
result<-computeDistancesClusters(FullData)
DistClust.df=result[[1]]
FullData=result[[2]]
ggplot(data=DistClust.df)+
aes(x=lambda, y=InterDistancesplmAPC)+ #plmAPC
geom_boxplot(size=0.1, alpha=0.6) +
facet_wrap(~as.factor(meanBL ))+
geom_point(size=0.5, alpha=0.6)
DistClust.df
DistClust.df[DistClust.df$lambda==0,]
FullData[FullData$lambda==0,]
library(dplyr)
ggplot(data=FullData)+
aes(x=as.factor(plmAPCNC), y=plmAPC,color=as.factor(CoevTypes))+ #plmAPC
geom_point(size=0.5, alpha=0.6) +
facet_wrap(~as.factor(sample ),nrow=3)
ggplot(data=FullData)+
aes(x=(plmAPCNC), y=plmAPC,color=as.factor(CoevTypes))+ #plmAPC
geom_point(size=0.5, alpha=0.6) +
facet_wrap(~as.factor(sample ),nrow=3)
ggplot(data=FullData)+
aes(x=(plmAPCNC), y=plmAPC,color=as.factor(CoevTypes))+ #plmAPC
geom_point(size=0.5, alpha=0.6) +
facet_wrap(~as.factor(sample +lambda),nrow=3)
ggplot(data=FullData)+
aes(x=(plmAPCNC), y=plmAPC,color=as.factor(CoevTypes))+ #plmAPC
geom_point(size=0.5, alpha=0.6) +
geom_abline(slope=1,intercept=0)
ggplot(data=FullData)+
aes(x=(plmAPCNC), y=plmAPC,color=as.factor(CoevTypes))+ #plmAPC
geom_point(size=0.5, alpha=0.6) +
geom_abline(slope=1,intercept=0)+
facet_wrap(~as.factor(sample) +lambda,nrow=3)
ggplot(data=FullData)+
aes(x=(plmAPCNC), y=plmAPC,color=as.factor(CoevTypes))+ #plmAPC
geom_point(size=0.5, alpha=0.6) +
geom_abline(slope=1,intercept=0)+
facet_wrap(~lambda+as.factor(sample) ,nrow=5)
ggplot(data=FullData)+
aes(x=(plmAPCwwNC), y=plmAPCww,color=as.factor(CoevTypes))+ #plmAPC
geom_point(size=0.5, alpha=0.6) +
geom_abline(slope=1,intercept=0)+
facet_wrap(~lambda+as.factor(sample) ,nrow=5)
ggplot(data=FullData)+
aes(x=(plm), y=plmAPC,color=as.factor(CoevTypes))+ #plmAPC
geom_point(size=0.5, alpha=0.6) +
geom_abline(slope=1,intercept=0)+
facet_wrap(~lambda+as.factor(sample) ,nrow=5)
which(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes="NonCoev-LL"&FullData$plmAPC==max(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes="NonCoev-LL",]$plmAPC)])
which(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes="NonCoev-LL"&FullData$plmAPC==max(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes="NonCoev-LL",]$plmAPC),])
which(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL"&FullData$plmAPC==max(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes="NonCoev-LL",]$plmAPC),])
which(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL"&FullData$plmAPC==max(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL",]$plmAPC),])
(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL"&FullData$plmAPC==max(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL",]$plmAPC),])
(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL"&FullData$plmAPC==max(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL",]$plmAPC,na.rm=TRUE),])
(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL",])
(subFullData[subFullData$sample==3 &subFullData$lambda==0.6&subFullData$CoevTypes=="NonCoev-LL"&subFullData$plmAPC==max(subFullData[subFullData$sample==3 &subFullData$lambda==0.6&subFullData$CoevTypes=="NonCoev-LL",]$plmAPC,na.rm=TRUE),])
subFullData<-FullData[complete.cases(FullData), ]
(subFullData[subFullData$sample==3 &subFullData$lambda==0.6&subFullData$CoevTypes=="NonCoev-LL"&subFullData$plmAPC==max(subFullData[subFullData$sample==3 &subFullData$lambda==0.6&subFullData$CoevTypes=="NonCoev-LL",]$plmAPC,na.rm=TRUE),])
which(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL"&FullData$plmAPC==2.3375,])
which(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL"&FullData$plmAPC==2.3375,]$plmAPC)
which(FullData[FullData$sample==3 &FullData$lambda==0.6&FullData$CoevTypes=="NonCoev-LL",]$plmAPC==2.3375)
indices<-Col2Pair(100)
Col2pair<-function(nSites){
pair=0
nPairs=nSites*(nSites-1)/2
a=vector(length=nPairs)
b=vector(length=nPairs)
for ( i in seq(1,(nSites-1))){
for (j in seq((i+1),nSites)){
pair = pair+1
a[pair]<-i
b[pair]<-j
}
}
return(list(a,b))
}
indices<-Col2pair(100)
indices[1][153]
indices[1][152]
indices[[1]][152]
indices[[2]][152]
which(FullData[FullData$sample==3 &FullData$lambda==0.6,]$plmAPC==2.3375)
indices[[2]][4052]
indices[[1]][4052]
setwd("~/Documents/POSTDOC-UNIL/CoevolutionProject/PottsModelAnalysis/SimulationTrees/FASTA/WithCoevMixtureBL0.01")
mutations<-read.csv("BL0.01randtree_3_0.3_.tree.mutationstates.txt",header=FALSE)
58-50
63-50
mutations[c(8,13),]
sum(mutations[8,]==TRUE & mutations[13,]=TRUE)
sum(mutations[8,]==TRUE & mutations[13,]==TRUE)
distToRoot<-read.csv("BL0.01randtree_3_0.6_.tree.distToRoot.txt",header =FALSE)
distToRoot
distToRoot[mutations[8,]]
distToRoot<-as.vector(read.csv("BL0.01randtree_3_0.6_.tree.distToRoot.txt",header =FALSE))
distToRoot[mutations[8,]]
distToRoot<-as.vector(read.csv("BL0.01randtree_3_0.6_.tree.distToRoot.txt",header =FALSE))
distToRoot<-vector(read.csv("BL0.01randtree_3_0.6_.tree.distToRoot.txt",header =FALSE))
distToRoot<-as.vector(read.csv("BL0.01randtree_3_0.6_.tree.distToRoot.txt",header =FALSE))
mutations<-as.matrix(read.csv("BL0.01randtree_3_0.3_.tree.mutationstates.txt",header=FALSE))
distToRoot[mutations[8,]]
distToRoot[mutations[13,]]
(subFullData[subFullData$sample==3 &subFullData$lambda==0.6&subFullData$CoevTypes=="NonCoev-LL"&subFullData$plmAPC==max(subFullData[subFullData$sample==3 &subFullData$lambda==0.6&subFullData$CoevTypes=="NonCoev-LL",]$plmAPC,na.rm=TRUE),])
(subFullData[subFullData$sample==4 &subFullData$lambda==1&subFullData$CoevTypes=="NonCoev-KK"&subFullData$plmAPC==max(subFullData[subFullData$sample==4 &subFullData$lambda==1&subFullData$CoevTypes=="NonCoev-KK",]$plmAPC,na.rm=TRUE),])
## False Positives  high plmDCA when no coev:
ggplot(data=subFullData)+
aes(x=nSubst, y=sumTwoHighestFreq,color=as.factor(Perf))+ #plmAPC
geom_point(size=0.7, alpha=0.5) +
scale_x_continuous(trans='log10')+
facet_wrap(~meanBL+lambda,nrow=3)
###FP secondFreq sup to 0
###what is missing is the other freq in between
subFullData$Perf<-subFullData$Coev
subFullData$Perf[subFullData$Coev]<-"Coev"
subFullData$Perf[subFullData$Coev&subFullData$FN]<-"FN"
subFullData$Perf[subFullData$Coev&!subFullData$FN]<-"TP"
subFullData$Perf[!subFullData$Coev&!subFullData$FP]<-"TN"
subFullData$Perf[!subFullData$Coev&subFullData$FP]<-"FP"
## False Positives  high plmDCA when no coev:
ggplot(data=subFullData)+
aes(x=nSubst, y=sumTwoHighestFreq,color=as.factor(Perf))+ #plmAPC
geom_point(size=0.7, alpha=0.5) +
scale_x_continuous(trans='log10')+
facet_wrap(~meanBL+lambda,nrow=3)
subFullData$Perf
## False Positives  high plmDCA when no coev:
ggplot(data=subFullData)+
aes(x=nSubst, y=sumTwoHighestFreq,color=as.factor(Perf))+ #plmAPC
geom_point(size=0.7, alpha=0.5) +
scale_x_continuous(trans='log10')+
facet_wrap(~meanBL+lambda,nrow=3)
ggplot(data=subFullData[subFullData$Coev,])+
aes(x=nSubst, y=mi,color=FN)+ #plmAPC
geom_point(size=0.7, alpha=0.8) +
scale_x_continuous(trans='log10')+
facet_wrap(~meanBL+lambda,nrow=3)
subFullData$Coev
## False Positives  high plmDCA when no coev:
ggplot(data=FullData)+
aes(x=nSubst, y=sumTwoHighestFreq,color=as.factor(Perf))+ #plmAPC
geom_point(size=0.7, alpha=0.5) +
scale_x_continuous(trans='log10')+
facet_wrap(~meanBL+lambda,nrow=3)
subFullData<-FullData
###FP secondFreq sup to 0
###what is missing is the other freq in between
subFullData$Perf<-subFullData$Coev
subFullData$Perf[subFullData$Coev]<-"Coev"
subFullData$Perf[subFullData$Coev&subFullData$FN]<-"FN"
subFullData$Perf[subFullData$Coev&!subFullData$FN]<-"TP"
subFullData$Perf[!subFullData$Coev&!subFullData$FP]<-"TN"
subFullData$Perf[!subFullData$Coev&subFullData$FP]<-"FP"
## False Positives  high plmDCA when no coev:
ggplot(data=subFullData)+
aes(x=nSubst, y=sumTwoHighestFreq,color=as.factor(Perf))+ #plmAPC
geom_point(size=0.7, alpha=0.5) +
scale_x_continuous(trans='log10')+
facet_wrap(~meanBL+lambda,nrow=3)
library(ape)
setwd("~/Documents/POSTDOC-UNIL/CoevolutionProject/PottsModelAnalysis/SimulationTrees/RandTrees")
tree<-read.tree('randtree_3_0.6_.tree')
mutations[8,]&mutations[13,]
which(mutations[8,]&mutations[13,])
distToRoot[(mutations[8,]&mutations[13,])]
distToRoot[mutations[8,]]
distToRoot<-read.csv("BL0.01randtree_4_1_.tree.distToRoot.txt",header =FALSE)
tree<-read.tree('randtree_4_1_.tree')
setwd("~/Documents/POSTDOC-UNIL/CoevolutionProject/PottsModelAnalysis/SimulationTrees/FASTA/WithCoevMixtureBL0.01")
distToRoot<-read.csv("BL0.01randtree_4_1_.tree.distToRoot.txt",header =FALSE)
mutations<-read.csv("BL0.01randtree_4_1_.tree.mutationstates.txt",header=FALSE)
distToRoot[mutation[91,]]
distToRoot[mutations[91,]]
distToRoot[mutations[(91-50),]]
distToRoot[mutations[(91-50)]]
distToRoot[mutations[(91-50),]]
mutations<-as.matrix(read.csv("BL0.01randtree_4_1_.tree.mutationstates.txt",header=FALSE))
distToRoot[mutations[(91-50),]]
distToRoot[mutations[(93-50),]]
tree
plot(tree)
tree$edg
tree$edge
tree$edge[843,]
tree$edge[820,]
subtrees<-subtree(tree)
subtreesList<-subtrees(tree)
subtreesList
length(subtreesList)
tree$Nnode
tree$edge[843,]
tree$edge[820,]
subtreesList[[901]]
tree
subtreesList[[(901-500)]]
length(subtreesList[[(901-500)]]$tip.label)
length(subtreesList[[(912-500)]]$tip.label)
length(subtreesList[[(915-500)]]$tip.label)
length(subtreesList[[(923-500)]]$tip.label)
subtreesList[[(tree$edge[820,2]-500)]]
subtreesList[[(tree$edge[820,2]-500)]]$node.label
subtreesList[[(tree$edge[843,2]-500)]]$node.label
subtreesList[[(tree$edge[843,2]-500)]]
distToRoot[mutations[8,]]
distToRoot[mutations[13,]]
91-50
distToRoot[mutations[41,]]
distToRoot[mutations[43,]]
nrow(mutations)
distToRoot[mutations[91,]]
distToRoot[mutations[93,]]
subtreesList[[(tree$edge[761,2]-500)]]$tip.label
subtreesList[[(tree$edge[761,2]-500)]]$tips.label
subtreesList[[(tree$edge[761,2]-500)]]$tipslabel
(tree$edge[761,2]-500
)
tree$edge[761,]
tree$edge[543,]
subtreesList[[(tree$edge[543,2]-500)]]$tipslabel
tree$edge[3,]
tree$edge[46,]
tree$edge[186,]
tree$edge[310,]
tree$edge[312,]
tree$edge[550,]
tree$edge[677,]
subtreesList[[(tree$edge[310,2]-500)]]$tipslabel
subtreesList[[659]
]
subtreesList[[659-500]]
subtreesList[[(tree$edge[310,2]-500)]]$tip.label
subtreesList[[(tree$edge[186,2]-500)]]$tip.label
subtreesList[[(tree$edge[3,2]-500)]]$tip.label
subtreesList[[(tree$edge[4,2]-500)]]$tip.label
length( subtreesList[[(tree$edge[4,2]-500)]]$tip.label)
length( subtreesList[[(tree$edge[3,2]-500)]]$tip.label)
74/500
500/74
74/500*100
14.8*5
